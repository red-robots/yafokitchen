@mixin tab { @media (min-width: $tabwidth) { @content; } }
@mixin mid { @media (min-width: $midwidth) { @content; } }
@mixin desk {  @media (min-width: $deskwidth) { @content; } }

// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}
@mixin flexbox(){
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}
@mixin flexbox-flex($first, $second, $third) {
	-webkit-box-flex: $first $second $third;
	-moz-box-flex: $first $second $third;
	-webkit-flex: $first $second $third;
	-ms-flex: $first $second $third;
	flex: $first $second $third;
}
@mixin flexbox-wrap($value){
	-webkit-flex-wrap: $value;
	flex-wrap: $value;
}
@mixin flexbox-align-content($value){
	-webkit-align-content: $value;
	align-content: $value;
}
@mixin flexbox-align-items($value){
	-webkit-align-items: $value;
	align-items: $value;
}
@mixin flexbox-justify($value){
	-webkit-justify-content: $value;
	justify-content: $value;
}
@mixin flexbox-align-self($value){
	-webkit-align-self: $value;
	align-self: $value;
}
@mixin flexbox-direction($value){
	-webkit-flex-direction: $value;
	flex-direction: $value;
}
@mixin translatexy($value1,$value2){
	-ms-transform: translateX($value1) translateY($value2);
	-moz-transform: translateX($value1) translateY($value2);
	-webkit-transform: translateX($value1) translateY($value2);
	transform: translateX($value1) translateY($value2);
}

@mixin transition($value) {
	-webkit-transition: $value;
	-moz-transition: $value;
	-o-transition: $value;
	-ms-transition: $value;
	transition: $value;
}

@mixin transform($value) {
	-webkit-transform: $value;
	-moz-transform: $value;
	-o-transform: $value;
	-ms-transform: $value;
	transform: $value;
}
@mixin transform-origin($value) {
	-webkit-transform-origin: $value;
	-ms-transform-origin: $value;
	transform-origin: $value;
}
@mixin box-shadow($value) {
	-webkit-box-shadow: $value;
	-moz-box-shadow: $value;
	box-shadow: $value;
}
@mixin grayscale($num) {
	-webkit-filter: grayscale($num);
	filter: grayscale($num);
}

@mixin border-radius($topleft: null, $topright: null, $bottomright: null, $bottomleft: null) {
  @if $topleft != null and $topleft >= 0 {
    border-top-left-radius: $topleft;;
    -webkit-border-top-left-radius: $topleft;
    -moz-border-radius-topleft: $topleft;
  }

  @if $topright != null and $topright >= 0 {
    border-top-right-radius: $topright;
    -webkit-border-top-right-radius: $topright;
    -moz-border-radius-topright: $topright;
  }

  @if $bottomleft != null and $bottomleft >= 0 {
    border-bottom-left-radius: $bottomleft;
    -webkit-border-bottom-left-radius: $bottomleft;
    -moz-border-radius-bottomleft: $bottomleft;
  }

  @if $bottomright != null and $bottomright >= 0 {
    border-bottom-right-radius: $bottomright;
    -webkit-border-bottom-right-radius: $bottomright;
    -moz-border-radius-bottomright: $bottomright;
  }
}

@mixin flexgroup() {
	@include flexbox();
	@include flexbox-wrap(wrap);
	@include flexbox-direction(row);
}
@mixin flexgroup-center() {
	@include flexbox();
	@include flexbox-wrap(wrap);
	@include flexbox-direction(row);
	@include flexbox-align-items(center);
}

@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}

@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}

